Tokentypes:
  -Keywords
  -identifier
  -Constant
  -string-literal
  -Operator
  -punctuator


1.) Keywords:
  0 Null  cbNull
  1 void  cbVoid  
  2 int   cbInt
  3 char  cbChar
  4 double  cbDouble
  5 while cbWhile
  6 if    cbIf  
  7 else  cbElse
  8 return  cbReturn
  9 struct  cbStruct

2.) Identifier:
  100 identifier(String-value)    cbIdentifier

3.) constant
  200 int       cbIntVar
  201 double    cbDoubleVar
  202 char      cbCharVar

4.) string-literal:
  300 string-value cbStringValue

5.) Operators:
  400 +   cbPlus
  401 -   cbMinus
  402 *   cbMult
  403 /   cbDivide
  404 %   cbPercent
  405 =   cbAssignment
  406 ==  cbEquals
  407 <=  cbLessEqual
  408 >=  cbGreaterEqual
  409 <   cbLess
  410 >   cbGreater
  411 <<  cbShiftLeft
  412 >>  cbShiftRight
  413 &   cbAddress
  414 &&  cbAnd
  415 |   cbBitwiseOr
  416 ||  cbOr
  417 ^   cbBItwiseExklOr
  418 ~   cbBitewiseNot
  419 !=  cbUnequal
  420 ++  cbIncrement
  421 --  cbDecrement
  422 !   cbNot

6.) punctuator:
  500 [   cbLSB
  501 ]   cbRSB
  502 (   cbLRB
  503 )   cbRRB
  504 {   cbLCB
  505 }   cbRCB
  506 ;   cbSemicolon
  507 ,   cbComma
  508 :   cbColon
  509 EOF cbEOF
  510 #   cbHash
  511 .   cbPoint
